'use strict';
define(['jquery','knownArchives'],function($, knownArchives) {

	var catalogue = [];
	var lang="en";
    var prefix="";
	var doc;

    // Note: The knownArchive.all object contains all known psuedo zim objects(as opposed to prev used File based objects) that can be loaded via url. 
    // It is generated by scripts/updateKnownArchives whenever it is time to do an update (once in a 3-6 months should be fine). 
    // This generation process is currently run outside of the app cause its much faster than downloading metadata reqd for each zim via the app itself.
    // The "downloadable archive" catalog of links/torrents comes from library.kiwix.org and can eventually be merged with the updateknownarchive process so that links and torrents are also part of knownArchive.all. 
    // Added shortnames so full file name doesn't need to be used in url eg index.html?archive=xxx
    // Shortname can be used to point at latest version of a particular archive
    // 'test' archive points to the sample ray charles zim
    /* some shortnames used - so (stackoverflow), wiki (wikipedia), quotes, dict, voyage */
    
    var URL2Archive = {
        'simple.wikipedia.org': 'wiki',
        'en.wikipedia.org': 'wiki',
        'en.wikipedia.org/wiki': 'wiki',
        'en.wiktionary.org/wiki': 'dict',
        'stackoverflow.com': 'so',
        'www.stackoverflow.com': 'so',
        'developer.mozilla.com': 'mdn',
        'msdn.com': 'msdn'
    };
    function onDiskMatches(){
        var totalknown=Object.getOwnPropertyNames(knownArchives).length, scanned=0;
        
        function scanUpdate(){
            scanned=scanned+1;
            var progress = (scanned/totalknown)*100;
            //console.log(progress);
            $("#scanprogress").css("width",progress+"%"); 
        }

        function makeBlobRequest(url) {
            return new Promise(function (resolve, reject) {
                var xhr = new XMLHttpRequest();                
                xhr.open('GET', url, true);
                xhr.overrideMimeType('text\/plain; charset=x-user-defined');
                xhr.addEventListener("load", function() {
                    var sliced = xhr.response.slice(0, 80);
                    try{
                        var fr = new FileReader();
                        fr.readAsArrayBuffer(sliced);
                        fr.addEventListener("load", function() {
                            scanUpdate();
                            resolve(url); });
                    }catch(ex){ 
                        scanUpdate();
                        reject(false); 
                    }
                });
                xhr.onerror = function () { 
                    scanUpdate(); 
                    reject(false); 
                };
                xhr.responseType='blob';
                xhr.send(null);
            });
        }
        
        var b=Object.getOwnPropertyNames(knownArchives.all).map(function(c) {
            return makeBlobRequest(c).catch(function(e){ return false; });
        });
        return Promise.all(b).then(function(values){ return values.filter(function(v){return v;});});
    }

	function getLatestCatalogue(){
        var x = new XMLHttpRequest();
        x.open("GET", "http://library.kiwix.org/catalog/root.xml", true);
        x.onprogress = function(event){
            if(event.lengthComputable){
                var progress = (event.loaded/event.total)*100;
                //console.log(progress);
                $("#updateprogress").css("width",progress+"%");
            }
        };
        x.onreadystatechange = function () {
          if (x.readyState == 4 && x.status == 200)
          {
            doc = x.responseXML;
            processDoc();
          }
        };
        x.send(null);
    }

    function processDoc(){
    	var namespaceResolver = (function () {
            var prefixMap = {
                a: "http://www.w3.org/2005/Atom",
                ospd: "http://opds-spec.org/2010/catalog"
            };
            return function (prefix) {
                return prefixMap[prefix] || null;
            };
        }());
        // lang filter
        var link = doc.evaluate('/a:feed/a:entry/a:link[@type="application/x-zim" and contains(@href,"_'+lang+'_")]', doc, namespaceResolver, 0, null);
        // with prefix filter - slow
	    //var link = doc.evaluate('/a:feed/a:entry/a:link[@type="application/x-zim" and contains(@href,"_'+lang+'_") and starts-with(@href,"http://download.kiwix.org/zim/'+prefix+'")]', doc, namespaceResolver, 0, null);
	    // with year filter
        //var link = doc.evaluate('/a:feed/a:entry/a:link[@type="application/x-zim" and contains(@href,"_'+lang+'_") and contains(@href,"2018")]', doc, namespaceResolver, 0, null);
        // title filter
        //var link = doc.evaluate('/a:feed/a:entry/a:title[starts-with(text(),"'+prefix+'")]', doc, namespaceResolver, 0, null);
        var result=link.iterateNext();
        //console.log(link);
        //console.log(result);
        catalogue=[]
        //groups={}
        while(result){
            var title = result.parentElement.children[0].textContent;
            if(title.toLowerCase().startsWith(prefix.toLowerCase())){
            	catalogue.push({
                url: result.attributes["href"].value,
                title: title,
                favicon: result.parentElement.children[2].textContent, // favicon
                date: result.parentElement.children[3].textContent, // date
                description: result.parentElement.children[4].textContent, // description
                creator: result.parentElement.children[6].textContent // creator
                });
                //console.log(result.attributes["href"].value);
            }
            result=link.iterateNext();
        }
        generateCatalogUI();
    }
    var groups = {};
    function addToCatalogUI(item){
        if(item.title in groups){
            groups[item.title].push(item);
            addToGroup();
        }
        else{
            groups[item.title] = [item];
            createGroupHeader();
            addToGroup();
        }
    }
    function addToGroup(){}
    function createGroupHeader(){}

    function generateCatalogUI(){
        groups={};
        $.each( catalogue, function( i, item ) {
            if(item.title in groups)
                groups[item.title].push(item);
            else
                groups[item.title] = [item];
        });
        // group links by title, sort groups by lenth, sort links in group by date
        var groupHTML=''; //= '<ul id="accordian" class="list-group">';
        for(var group in groups){
            groups[group].sort(function(a,b){return new Date(b.date) - new Date(a.date);});
        }
        var groupsSorted = Object.keys(groups).sort(function(a,b){return groups[b].length - groups[a].length});
        // generate subGroup HTML 
        for(var i=0;i<groupsSorted.length;i++){
            var items = [], subGroup = groups[groupsSorted[i]];
            // Group Header
            var groupHeader = '<a class="list-group-item small" data-toggle="collapse" href="#g'+i+'" >\
                <span class="badge">'+ subGroup.length+'</span><strong> '+groupsSorted[i]+'</strong>\
                <span class="small"> <em>'+subGroup[0].description+'</em>\
             - Creator:<strong>'+ subGroup[0].creator+ '</strong>\
             </a>\
            <ul style="padding:2px" id="g'+i+'" class="collapse  list-group">'; 
            for(var j=0;j<subGroup.length;j++){
                var item = subGroup[j];
                // torrent name as per convention on wiki.kiwix.org/wiki/content
                var name = item.url.slice(30,-10).split('/')[1];
                var torrent = "http://download.kiwix.org/zim/"+ name.slice(0,-8) +".zim.torrent";
                items.push("<li class ='list-group-item small' style='padding:2px'> \
                	<a href='"+item.url.slice(0,-6) +"' onclick='return confirm(&apos;Once the download completes, move the file to the www directory of your Kiwix install folder.&apos;);'>"+name+
                    " <span class='glyphicon glyphicon-download'></span></a>\
                    <a href='"+torrent +"' onclick='return confirm(&apos;Once the download completes, move the file to the www directory of your Kiwix install folder.&apos;);'>\
                    <span class='glyphicon glyphicon-magnet'></span></a>\
                     </li>");	                
            }
            groupHTML = groupHTML + groupHeader + items.join( "" ) +"</ul>";
        }
        //groupHTML = groupHTML + '</ul>';
        //jqueryNode.html(groupHTML);
        $("#accordian").html(groupHTML);
    }
    var items = [];
    function renderList(jqn, zimsOnDisk){
        if (zimsOnDisk.length===0){
            jqn.append("<mark>These are <strong>NO</strong> <a href='openzim.org'>zim</a> files found in the default storage location - the <strong>'www'</strong> directory of your kiwix folder. Try the options below...</mark>");
        }else{
            jqn.append("<small class='text-muted'>These are <a href='openzim.org'>zim</a> files found in the default storage location - the <strong>'www'</strong> directory of your kiwix folder</small>");
            $.each( zimsOnDisk, function( i, item ) {
                    var temp = item.split('_'); // HACK to get a readable name from long file name
                    var baseurl = location.href.replace( /settings\.html[\?#].*|settings\.html$/, "index.html?archive="+item);
                    var homepg= baseurl + "&home=";
                    var randompg = baseurl +"&random=";
                    items.push( "<li class='list-group-item text-center' id='" + i + "'>\
                        <strong style='float:left;'>" + temp[0].charAt(0).toUpperCase() + temp[0].slice(1) +"</strong>\
                        <small>"+item+"</small> \
                        <span>\
                        <a target='_top' class='btn btn-xs' href='"+homepg+"' title='Home Page'><span class='glyphicon glyphicon-home'></span></a>\
                        <a target='_top' class='btn btn-xs' href='"+baseurl+"' title='Details'><span class='glyphicon glyphicon-info-sign'></span></a>\
                        <a target='_top' class='btn btn-xs' href='"+randompg+"' title='Random Article'><span class='glyphicon glyphicon-random'></span></a></span></li>");
                });
            jqn.append(items.join( "" ));
        }
    }

    function initList(){
        //jqn.append("<h4 style='border-bottom:2px solid #004499'>Detected Archives</h4>");
        jqn.append("<h4>Detected Archives</h4>");
        jqn.append("<div class='progress' style='height:4px;'> \
            <div id='scanprogress' class='progress-bar' role='progressbar' aria-valuenow='0' aria-valuemin='0' aria-valuemax='100' style='width:0%'> \
            </div> \
            </div>");
    }

    function renderTable(jqn, zimsOnDisk){
        if (zimsOnDisk.length===0){
            jqn.append("<mark>These are <strong>NO</strong> <a href='openzim.org'>zim</a> files found in the default storage location - the <strong>'www'</strong> directory of your kiwix folder. Try the options below...</mark>");
        }else{
            $.each( zimsOnDisk, function( i, item ) {
                    var temp = item.split('_'); // HACK to get a readable name from long file name
                    var baseurl = location.href.replace( /settings\.html[\?#].*|settings\.html$/, "index.html?archive="+item);
                    var homepg= baseurl + "&home=";
                    var randompg = baseurl +"&random=";
                    items.push( "<tr id='" + i + "'>\
                        <th scope='row'>" + temp[0].charAt(0).toUpperCase() + temp[0].slice(1) +"</th>\
                        <td>"+item+"</td> \
                        <td>\
                        <a target='_top' class='btn btn-primary btn-xs' href='"+homepg+"' title='Home Page'><span class='glyphicon glyphicon-home'></span></a>\
                        <a target='_top' class='btn btn-primary btn-xs' href='"+baseurl+"' title='Details'><span class='glyphicon glyphicon-info-sign'></span></a>\
                        <a target='_top' class='btn btn-primary btn-xs' href='"+randompg+"' title='Random Article'><span class='glyphicon glyphicon-random'></span></a>\
                        </td></tr>");
                });
            jqn.append(items.join( "" ));
        }
    }

    function loadDetected(jqn){
        items = [];
        onDiskMatches().then((zimsOnDisk)=>{ renderTable(jqn, zimsOnDisk); }); // TODO add a .catch()      
    }

    function filterCatalogueByName(){
        prefix = this.value;
        console.log(prefix + " prefix selected");
        processDoc();
    }

	function load( jqn ) {    
        // Add downloadable ZIM's
        jqn.append("<h4 style='border-bottom:2px solid #004499'>Downloadable Archives</h4> \
        	<small class='text-muted'> The Update button gets the latest list of downloadable archives from <a href='library.kiwix.org'>kiwix.org</a>. After the download completes, copy the zim file into the <strong>'www'</strong> directory of your kiwix folder</small> \
            <p><small><mark>Download may take a few seconds to start.</small></p> \
            <button id='getLatest' class='btn btn-primary'>Update Catalogue</button> \
        	<input type='text' id='dwFilter' placeholder='Filter Names'>\
        	<select id='langSelect' class='small'>\
        	<option value='ar'>العربية</option>\
        	‎<option value='az'>azərbaycanca</option>\
        	‎<option value='bn'>বাংলা</option>\
        	<option value='ca'>català</option>\
        	<option value='da'>dansk</option>\
        	<option value='de'>Deutsch</option>\
        	<option value='el'>Ελληνικά</option>\
        	<option value='en' selected>‎English</option> \
        	<option value='es'> español</option> \
        	<option value='fa'>فارسی</option> \
        	<option value='fr'>français</option> \
        	<option value='gl'>galego</option> \
        	<option value='he'>עברית</option> \
        	<option value='id'>Bahasa Indonesia</option> \
        	<option value='it'>italiano</option> \
        	<option value='ja'>日本語</option>\
        	<option value='ka'>ქართული</option>\
        	<option value='ko'>한국어</option>\
        	<option value='ku-latn'>Kurdî (latînî)‎‎</option>\
        	<option value='lt'>lietuvių</option>\
        	<option value='ml'>മലയാളം</option>\
        	<option value='ms'>Bahasa Melayu</option> \
        	‎<option value='nl'>Nederlands</option>\
        	<option value='pl'>polski</option>\
        	<option value='ps'>پښتو</option>\
        	<option value='pt'>português</option>\
        	<option value='ru'>русский</option> ‎\
        	<option value='sd'>سنڌي</option> ‎\
        	<option value='tr'>Türkçe</option> ‎\
        	<option value='ur'>اردو</option> ‎\
        	<option value='zh'>中文</option> ‎\
        	‎<option value='zh-cn'> 中文（中国大陆）‎</option> ‎\
        	‎<option value='zh-tw'>中文（台灣）‎</option></select>\
        	<div class='progress' style='height:4px;'> \
  				<div id='updateprogress' class='progress-bar' role='progressbar' aria-valuenow='0' aria-valuemin='0' aria-valuemax='100' style='width:0%'> \
  				</div> \
			</div> <ul id='accordian' class='list-group'></ul>\ ");
        $("#langSelect").on("change",function (){
			lang = this.value;
    		console.log(lang + " lang selected");
    		processDoc();
        });
        $("#getLatest").on("click",getLatestCatalogue); 
        $("#dwFilter").on("keyup", filterCatalogueByName);        
    };

	return {
        loadDownloadables: load,
        loadDetected:loadDetected,
        URL2Archive:URL2Archive
    };
});
